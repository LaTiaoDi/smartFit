{"version":3,"sources":["uni-app:///uni_modules/uni-feedback/js_sdk/validator/opendb-feedback.js"],"names":["validator","enumConverter","filterToWhere","filter","command","where","field","type","value","length","RegExp","selectValue","s","push","eq","or","gt","lt","and","gte","lte","e","startDate","Date","endDate"],"mappings":"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","file":"uni_modules/uni-feedback/common/vendor.js","sourcesContent":["// 表单校验规则由 schema2code 生成，不建议直接修改校验规则，而建议通过 schema2code 生成, 详情: https://uniapp.dcloud.net.cn/uniCloud/schema\r\n\r\n\r\nconst validator = {\r\n  \"content\": {\r\n    \"rules\": [\r\n      {\r\n        \"required\": true\r\n      },\r\n      {\r\n        \"format\": \"string\"\r\n      }\r\n    ],\r\n    \"label\": \"留言内容/回复内容\"\r\n  },\r\n  \"imgs\": {\r\n    \"rules\": [\r\n      {\r\n        \"format\": \"array\"\r\n      },\r\n      {\r\n        \"arrayType\": \"file\"\r\n      },\r\n      {\r\n        \"maxLength\": 6\r\n      }\r\n    ],\r\n    \"label\": \"图片列表\"\r\n  },\r\n  \"contact\": {\r\n    \"rules\": [\r\n      {\r\n        \"format\": \"string\"\r\n      }\r\n    ],\r\n    \"label\": \"联系人\"\r\n  },\r\n  \"mobile\": {\r\n    \"rules\": [\r\n      {\r\n        \"format\": \"string\"\r\n      },\r\n      {\r\n        \"pattern\": \"^\\\\+?[0-9-]{3,20}$\"\r\n      }\r\n    ],\r\n    \"label\": \"联系电话\"\r\n  }\r\n}\r\n\r\nconst enumConverter = {}\r\n\r\nfunction filterToWhere(filter, command) {\r\n  let where = {}\r\n  for (let field in filter) {\r\n    let { type, value } = filter[field]\r\n    switch (type) {\r\n      case \"search\":\r\n        if (typeof value === 'string' && value.length) {\r\n          where[field] = new RegExp(value)\r\n        }\r\n        break;\r\n      case \"select\":\r\n        if (value.length) {\r\n          let selectValue = []\r\n          for (let s of value) {\r\n            selectValue.push(command.eq(s))\r\n          }\r\n          where[field] = command.or(selectValue)\r\n        }\r\n        break;\r\n      case \"range\":\r\n        if (value.length) {\r\n          let gt = value[0]\r\n          let lt = value[1]\r\n          where[field] = command.and([command.gte(gt), command.lte(lt)])\r\n        }\r\n        break;\r\n      case \"date\":\r\n        if (value.length) {\r\n          let [s, e] = value\r\n          let startDate = new Date(s)\r\n          let endDate = new Date(e)\r\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n        }\r\n        break;\r\n      case \"timestamp\":\r\n        if (value.length) {\r\n          let [startDate, endDate] = value\r\n          where[field] = command.and([command.gte(startDate), command.lte(endDate)])\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return where\r\n}\r\n\r\nexport { validator, enumConverter, filterToWhere }\r\n"],"sourceRoot":""}